import datetime
from enum import Enum


class RenderLayout(Enum):
    MAP_CENTER = 0
    MAP_RIGHT = 1


# Смотрим рекомендуемые настройки кодирования здесь https://support.google.com/youtube/answer/1722171?hl=ru
# выбираем частоту кадров, разрешение и соотношение сторон, останавливаемся на Ultra HD 4K.
# Внимание! крайне не рекомендуется менять следующие параметры, задавая их отличными от одного из перечисленных
# по ссылке вариантов, во избежание перекодирования изображений сгенерированных этой программой. Изображения содержат
# текст, которые после переконвертации может стать плохочитаемым.

# настройки, которые влияют на видимость карды звёздного неба и светимость звёзд
# SOLAR_SYSTEM_FATNESS - рекомендуется не меньше 3 для крупных разрешений
# SOLAR_SYSTEM_BLUR - не может быть меньше SOLAR_SYSTEM_FATNESS; 0 использовать только для отладки и настройки
# LUMINOSITY_MIN_BOUND - 50 хорошо в тёмное время суток на тёмном экране, 100 днём очень ярко для killmails

""" 800x600 "" "
RENDER_WIDTH: int = 800
RENDER_HEIGHT: int = 600
RENDER_FRAME_RATE: int = 2

SOLAR_SYSTEM_FATNESS: float = 2.0
SOLAR_SYSTEM_BLUR: int = 1
LUMINOSITY_MIN_BOUND: int = 40
LUMINOSITY_MAX_BOUND: int = 255
"" " """

""" 1366x768 "" "
RENDER_WIDTH: int = 1366
RENDER_HEIGHT: int = 768
RENDER_FRAME_RATE: int = 24

SOLAR_SYSTEM_FATNESS: float = 2.0
SOLAR_SYSTEM_BLUR: int = 1
LUMINOSITY_MIN_BOUND: int = 40
LUMINOSITY_MAX_BOUND: int = 255
"" " """

""" 3840x2160 """
RENDER_WIDTH: int = 3840
RENDER_HEIGHT: int = 2160
RENDER_FRAME_RATE: int = 24

SOLAR_SYSTEM_FATNESS: float = 4.0
SOLAR_SYSTEM_BLUR: int = 1
LUMINOSITY_MIN_BOUND: int = 60
LUMINOSITY_MAX_BOUND: int = 255
""" """

# настройки, которые влияют на компактность отображения информации, её позиционирование в разных частях экрана,
# таким образом можно настроить расположение карты по центру, или перемещение её вправо для увеличения площади
# для надписей слева
# NUMBER_OF_EVENTS - максимальное количество событий в полную высоту экрана (влияет на размер шрифта)

""" две колонки с со списками событий по бокам карты "" "
NUMBER_OF_EVENTS: int = 50
RENDER_LAYOUT: RenderLayout = RenderLayout.MAP_CENTER
"" " """

""" одна общая колонка с со списком событий слева от карты """
NUMBER_OF_EVENTS: int = 70
RENDER_LAYOUT: RenderLayout = RenderLayout.MAP_RIGHT
""" """

# настройки, которые влияют на размер и видимость событий, наносимых на карту звёздного неба
KILLMAIL_MAP_MIN_ALPHA: float = 220  # 255 максимальный уровень непрозрачности
KILLMAIL_MAP_MAX_ALPHA: float = 40   # 0 максимальный уровень прозрачности
KILLMAIL_MIN_FATNESS: float = SOLAR_SYSTEM_FATNESS * 4  # маркер гибели корабля больше солнечной системы, далее по массе

INDUSTRY_MAP_MIN_ALPHA: float = 220  # 255 максимальный уровень непрозрачности
INDUSTRY_MAP_MAX_ALPHA: float = 128  # 0 максимальный уровень прозрачности
INDUSTRY_MIN_FATNESS: float = SOLAR_SYSTEM_FATNESS * 5  # маркер производства больше солнечной системы, далее по ранам

MARKET_MAP_MIN_ALPHA: float = 220    # 255 максимальный уровень непрозрачности
MARKET_MAP_MAX_ALPHA: float = 128    # 0 максимальный уровень прозрачности
MARKET_MIN_FATNESS: float = SOLAR_SYSTEM_FATNESS * 4  # маркер торговли больше солнечной системы, далее по искам

# интервалы времени (д.б. согласованы с RENDER_FRAME_RATE), длительность игровых суток можно подобрать так, чтобы ролик
# не был слишком длинным (например ролик с 2019-09-15 по 2022-02-05 занимает 14 минут, состоит их 21000 кадров, которые
# занимают 17 Гб дискового пространства), но всё же ролик рекомендуется не делать слишком длинным, если предполагается
# его заливка на youtube, т.к. среднее время просмотра там составляет не более 7 минут
DURATION_DATE_SEC: float = 0.5  # сколько секунд рисуются одни игровые сутки
DURATION_DATE: int = int(RENDER_FRAME_RATE * DURATION_DATE_SEC)  # кол-во фреймов, в которых будут одни игровые сутки
DURATION_REGION: int = 50  # кол-во игровых суток, которые регион считается активным (контур удерживается картой)
DURATION_FREEZING: int = 50  # кол-во игровых суток, которые карта удерживается в рамках активных регионов

# цвета, выбираем тут https://www.computerhope.com/htmcolor.htm
EVENTS_SETUP: ((int, int, int), int) = [
    # color              duration sec
    ((0xff, 0xe5, 0xb4), 15),  # peach (персиковый) warning "Hello, Qandra Si", живёт на экране 20 секунд
    ((0xb6, 0xb6, 0xb4), 5),   # gray cloud (светло серый) notice "Qandra Si has come", живёт на экране 4 секунды
    ((0x79, 0x79, 0x79), 4),   # platinum gray (сероватый) notice "Qandra Si gone", живёт на экране 3 секунды
    ((0xc9, 0xc0, 0xbb), 7),   # pale silver (сёро жёлтая) надпись рекорд производственных работ, живёт 5 секунд
    ((0x73, 0x7c, 0xa1), 7),   # slate blue grey (сёро голубая) надпись рекорд рыночных операций, живёт 5 секунд
    ((0xc9, 0x47, 0x0b), 13),  # красный (триглавский) warning "Pochven introduced...", живёт на экране 13 секунд
]
KILLMAILS_SETUP: (int, int, int) = [
    # color              map duration sec       list duration sec
    ((0xdc, 0x38, 0x1f), DURATION_DATE_SEC * 2, None),  # (в списке событий killmail не упоминается), живёт на карте 2 суток
    ((0xdc, 0x38, 0x1f), DURATION_DATE_SEC * 3, 20),    # grapefruit (красный) warning "Zorky Graf Tumidus lost Rhea", живёт на карте 3 суток, а в списке не дольше 20 суток
    ((0x12, 0xad, 0x2b), DURATION_DATE_SEC * 2, None),  # (в списке событий killmail не упоминается), живёт на карте 2 суток
    ((0x12, 0xad, 0x2b), DURATION_DATE_SEC * 3, 20),    # parrot green (зелёный) warning "Astrahus destroyed by 240 pilots", живёт на карте 3 суток, а в списке не дольше 20 суток
]
INDUSTRY_SETUP: (int, int, int) = (0xff, 0xdf, 0x00)    # golden yellow (жёлтый) производственные работы
MARKET_SETUP: (int, int, int) = (0x5c, 0xb3, 0xff)      # crystal blue (синий) операции на рынке
REGION_SETUP: ((int, int, int), int) = ((0x72, 0x8f, 0xce), 5)  # light purple blue (голубой) надпись с названием региона, живёт на карте 5 секунд

"""
Следующая секция не меняет поведение программы,
а задаёт расположение данные в считываемых в диска файлах 
"""

# формат csv файла events-utf8.txt
FILE_EVENTS_NAME: str = "events-utf8.txt"
FILE_EVENTS_COL_DATE: int = 0
FILE_EVENTS_COLS = [
    ('date', datetime.datetime),
    ('level', int),
    ('txt', str),
]
# формат csv файла killmails-utf8.txt
FILE_KILLMAILS_NAME: str = "killmails-utf8.txt"
FILE_KILLMAILS_COL_DATE: int = 0
FILE_KILLMAILS_COLS = [
    ('date', datetime.datetime),
    ('victim', int),
    ('shiptype', int),
    ('mass', float),
    ('txt', str),
    ('system', int),
]
# формат csv файла industry_jobs-utf8.txt
FILE_INDUSTRY_NAME: str = "industry_jobs-utf8.txt"
FILE_INDUSTRY_COL_DATE: int = 0
FILE_INDUSTRY_COLS = [
    ('date', datetime.datetime),
    ('jobs', int),
    ('system', int),
]
# формат csv файла market-utf8.txt
FILE_MARKET_NAME: str = "market-utf8.txt"
FILE_MARKET_COL_DATE: int = 0
FILE_MARKET_COLS = [
    ('date', datetime.datetime),
    ('system', int),
    ('isk', float),
]
# формат csv файла employment_interval-utf8.txt
FILE_EMPLOYMENT_NAME: str = "employment_interval-utf8.txt"
FILE_EMPLOYMENT_COL_ENTER_DATE: int = 4
FILE_EMPLOYMENT_COLS = [
    ('main_id', int),
    ('twink_id', int),
    ('main_name', str),
    ('twink_name', str),
    ('enter_date', datetime.datetime),
    ('gone_date', datetime.datetime),
]
